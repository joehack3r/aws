{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "SSH Bastion host.",

    "Parameters" : {

        "Environment" : {
            "Description" : "Environment name - no spaces or underscored allowed.",
            "Type" : "String",
            "AllowedPattern" : "[-a-zA-Z0-9]*"
        },

        "KeyName" : {
            "Description" : "Name of an existing EC2 KeyPair. Used for SSH access and decrypting Windows password.",
            "Type" : "AWS::EC2::KeyPair::KeyName"
        },

        "OwnerTag" : {
            "Description" : "Owner Tag. Preferably email username or email address.",
            "Type" : "String",
            "AllowedPattern" : "[\\.a-zA-Z0-9@]*"
        },

        "PublicSubnet0" : {
            "Description" : "ID of the public subnet where SSH Bastion instance will go.",
            "Type" : "AWS::EC2::Subnet::Id"
        },

        "SshBastionInstanceType" : {
            "Description" : "SSH Bastion Host EC2 instance type.",
            "Type" : "String",
            "ConstraintDescription" : "Must be a valid EC2 instance type.",
            "Default" : "t2.nano"
        },

        "SshBastionInstanceCountMin" : {
            "Description" : "Minimum number of instances in auto scaling group.",
            "Type" : "String",
            "Default" : "1"
        },

        "SshBastionInstanceCountMax" : {
            "Description" : "Maximum number of instances in auto scaling group.",
            "Type" : "String",
            "Default" : "1"
        },

        "SshBastionSecurityGroupId" : {
            "Description" : "Security group id where the bastion host server resides.",
            "Type" : "AWS::EC2::SecurityGroup::Id"
        },

        "UbuntuAmi" : {
            "Description" : "Ubuntu AMI. Should replace with hardened AMI.",
            "Type" : "AWS::EC2::Image::Id"
        },

        "VpcId" : {
            "Description" : "Physical ID of the VPC.",
            "Type" : "AWS::EC2::VPC::Id"
        }
    },

    "Resources" : {

        "SshBastionIpAddress" : {
            "Type" : "AWS::EC2::EIP",
            "Properties" : {
                "Domain" : "vpc"
            }
        },

        "SshBastionDeviceEni" : {
            "Type" : "AWS::EC2::NetworkInterface",
            "Properties" : {
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join" : ["", ["/vpc/", { "Ref" : "Environment" }, "/ssh-bastion-eni" ]]} },
                    { "Key" : "environment", "Value" : { "Ref": "Environment" } },
                    { "Key" : "product",     "Value" : "vpc" },
                    { "Key" : "role",        "Value" : "ssh-bastion-eni" },
                    { "Key" : "owner",       "Value" : { "Ref": "OwnerTag" } }
                ],
                "Description": "Elastic Network Interface to be used for SSH Bastion Device.",
                "GroupSet": [ { "Ref" : "SshBastionSecurityGroupId" } ],
                "SubnetId": { "Ref" : "PublicSubnet0" }
            }
        },

        "SshBastionElasticIpAssociation" : {
            "Type": "AWS::EC2::EIPAssociation",
            "Properties": {
                "AllocationId": { "Fn::GetAtt" : [ "SshBastionIpAddress", "AllocationId" ]},
                "NetworkInterfaceId" : { "Ref" : "SshBastionDeviceEni" }
            }
        },

        "SshBastionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/"
            }
        },

        "SshBastionRolePolicies": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
                "PolicyName": "SshBastion",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action":[
                                "ec2:AttachNetworkInterface",
                                "ec2:DescribeInstances",
                                "ec2:DescribeInstanceStatus",
                                "ec2:DescribeNetworkInterfaceAttribute",
                                "ec2:DetachNetworkInterface"
                            ],
                            "Effect":"Allow",
                            "Resource":"*"
                        }
                    ]
                },
            "Roles": [
                { "Ref": "SshBastionRole" }
            ]
            }
        },

        "SshBastionInstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/",
                "Roles": [
                    { "Ref": "SshBastionRole" }
                ]
            }
        },

        "SshBastionLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata" : {
                "Comment" : "Configure cfn-hup.",
                "AWS::CloudFormation::Init" : {
                    "configSets" : {
                        "first_install" : [ "install_cfn" ],
                        "subsequent_installs" : [ "do_nothing" ]
                    },

                    "install_cfn" : {
                        "files" : {
                            "/etc/cfn/cfn-hup.conf" : {
                                "content" : { "Fn::Join" : ["", [
                                    "[main]\n",
                                    "stack=", { "Ref" : "AWS::StackId" }, "\n",
                                    "region=", { "Ref" : "AWS::Region" }, "\n",
                                    "interval=1\n",
                                    "verbose=true\n"
                                ]]},
                                "mode"    : "000400",
                                "owner"   : "root",
                                "group"   : "root"
                            },

                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf" : {
                                "content": { "Fn::Join" : ["", [
                                    "[cfn-auto-reloader-hook]\n",
                                    "triggers=post.update\n",
                                    "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                                    "action=/usr/local/bin/cfn-init -v ",
                                    " --stack ", { "Ref" : "AWS::StackName" },
                                    " --resource SshBastionLaunchConfiguration ",
                                    " --configsets subsequent_installs ",
                                    " --region ", { "Ref" : "AWS::Region" }, "\n",
                                    "runas=root\n"
                                ]]}
                            }
                        }
                    },

                    "do_nothing" : {
                        "commands" : {
                            "test" : {
                                "command" : "date >> /tmp/do_nothing.log",
                                "ignoreErrors" : "true"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "AssociatePublicIpAddress" : "True",
                "ImageId": { "Ref" : "UbuntuAmi" },
                "InstanceType": { "Ref": "SshBastionInstanceType" },
                "KeyName": { "Ref": "KeyName" },
                "IamInstanceProfile": { "Ref": "SshBastionInstanceProfile" },
                "InstanceMonitoring": "false",
                "SecurityGroups": [{ "Ref": "SshBastionSecurityGroupId" }],
                "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["", [
                    "#!/bin/bash -v\n",

                    "# Capture UserData script output in multiple locations for easier debugging\n",
                    "# http://alestic.com/2010/12/ec2-user-data-output\n",
                    "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1\n",

                    "# Install cloudformation helper scripts\n",
                    "apt-get update\n",
                    "apt-get --yes install python python3 python-pip python3-pip\n",
                    "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                    "pip install --upgrade awscli\n",

                    "# Variables\n",
                    "instanceId=`curl -l http://169.254.169.254/latest/meta-data/instance-id/ 2>/dev/null`\n",

                    "# Configure OS\n",
                    "# Associate the Elastic Network Interface to the instance\n",
                    "attachmentId=`aws ec2 describe-network-interface-attribute --network-interface-id ", { "Ref" : "SshBastionDeviceEni" }, " --attribute attachment --region ", { "Ref" : "AWS::Region" }, " | grep AttachmentId | awk -F\"[ \t\\\",]+\" {'print $4'}`\n",
                    "aws ec2 detach-network-interface --attachment-id $attachmentId --force --region ", { "Ref" : "AWS::Region" }, "\n",
                    "# Need to wait a few seconds after detaching the ENI before attaching it to new instance\n",
                    "sleep 30\n",
                    "aws ec2 attach-network-interface --network-interface-id ", { "Ref" : "SshBastionDeviceEni" }, " --instance-id $instanceId --device-index 1 --region ", { "Ref" : "AWS::Region" }, "\n",
                    "# Need to wait a few seconds after attaching the ENI before it is ready for use\n",
                    "sleep 10\n",
                    "# Network changes to disable eth0 and only use eth1 (ENI)\n",
                    "cp /etc/network/interfaces.d/eth0.cfg /etc/network/interfaces.d/eth1.cfg\n",
                    "sed -i \"s/eth0/eth1/g\" /etc/network/interfaces.d/eth1.cfg\n",
                    "ifdown eth0\n",
                    "ifup eth1\n",
                    "# Restart networking\n",
                    "service networking restart\n",
                    "# Extra step to help ensure DNS server is populated in /etc/resolve.conf (DHCP lease information in /var/lib/dhcp/)\n",
                    "dhclient\n",

                     "/usr/local/bin/cfn-init -v ",
                     " --stack ", { "Ref" : "AWS::StackName" },
                     " --resource SshBastionLaunchConfiguration ",
                     " --configsets first_install",
                     " --region ", { "Ref" : "AWS::Region" }, "\n",

                     "/usr/local/bin/cfn-signal -e $? ",
                     " --stack ", { "Ref" : "AWS::StackName" },
                     " --resource SshBastionAutoScalingGroup ",
                     " --region ", { "Ref" : "AWS::Region" }, "\n",

                     "# Start up the cfn-hup daemon to listen for changes to the metadata\n",
                     "/usr/local/bin/cfn-hup --config /etc/cfn --verbose\n",

                    "\n"
                ]]}}
            }
        },

        "SshBastionAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Properties": {
                "LaunchConfigurationName": { "Ref": "SshBastionLaunchConfiguration" },
                "MinSize": { "Ref" : "SshBastionInstanceCountMin" },
                "MaxSize": { "Ref" : "SshBastionInstanceCountMax" },
                "Tags": [
                    { "Key" : "Name", "Value" : { "Fn::Join" : ["", ["/vpc/", { "Ref" : "Environment" }, "/ssh-bastion" ]]}, "PropagateAtLaunch" : "true" },
                    { "Key" : "environment", "Value" : { "Ref": "Environment" }, "PropagateAtLaunch" : "true" },
                    { "Key" : "product",     "Value" : "vpc",                    "PropagateAtLaunch" : "true" },
                    { "Key" : "role",        "Value" : "ssh-bastion",            "PropagateAtLaunch" : "true" },
                    { "Key" : "owner",       "Value" : { "Ref": "OwnerTag" },    "PropagateAtLaunch" : "true" }
                ],
                "VPCZoneIdentifier" : [ { "Ref" : "PublicSubnet0" } ]
            },
            "CreationPolicy" : {
                "ResourceSignal" : {
                    "Timeout" : "PT15M",
                    "Count"   : "1"
                }
            },
            "UpdatePolicy" : {
                "AutoScalingScheduledAction" : {
                    "IgnoreUnmodifiedGroupSizeProperties" : "true"
                },
                "AutoScalingRollingUpdate" : {
                    "MinInstancesInService" : "0",
                    "MaxBatchSize" : "1",
                    "WaitOnResourceSignals" : "true",
                    "PauseTime" : "PT15M"
                }
            }
        }
    },

    "Outputs" : {
        "BastionHostPublicIp" : {
            "Description" : "Public IP Address of the Bastion host",
            "Value" :  { "Ref" : "SshBastionIpAddress" }
        },
        "BlankSpace" : {
            "Value" : "Empty space",
            "Description" : "Empty space so easier to copy other outputs."
        }
    }
}
